// Simple Translation Dictionaries

booleanValue ::= [
    "true"  : "true",
    "false" : "false",
    default : "null"
]

typeValue ::= [
    "Integer"  : "int",
    "Real"     : "double",
    "Boolean"  : "boolean",
    "String"   : "String",
    default    : "null"
]


typeFormat ::= [
    "Integer"  : "",
    "Real"     : "",
    "Boolean"  : "",
    "String"   : "",
    default    : "null"
]

operators ::= [
    "*"  : "*",
    ":"  : "/",
    "+"  : "+",
    "-"  : "-",
    default    : "null"
]

powerTypeCast ::= [
    "Integer" : "(int)",
    "Real" : "(double)",
    default : "null"
]


// Actual String Templates

//Generate Class
module(name,stat) ::= <<
import java.util.Scanner;

public class <name> {  

    public static void main(String[] args){
        Scanner userInput = new Scanner(System.in);
        <stats(stat)>
    }
}
>>

stats(stat) ::= <<
<if(stat)><stat; separator="\n"><endif>
>>

//Declare New Variable (and assign it a value if need-be)
init(value) ::= "<if(value)> = <value><endif>" //Check if there's a value
declaration(type,var,value) ::= "<typeValue.(type)> <var><init(value)>;"


//Assign Value to Variable
assign(stat,var,value) ::= <<
<stats(stat)>
<var> = <value>;
>>


//Print expression
initUnit(unit) ::= "<if(unit)> + \"<unit>\"<endif>" //Check if there's a unit
print(stat,expr,unit) ::= <<
<stats(stat)>
System.out.println(<expr><initUnit(unit)>);
>>


//Input from user
input(stat, prompt,var) ::= <<
<stats(stat)>
System.out.print(<prompt>);
String <var> = userInput.nextLine();
>>

//Expression (will always be binary)
expression(type,var,e1,op,e2) ::= "<declaration(type,var,[e1,\" \",operators.(op),\" \",e2])>"

//Power expression
powerExpr(type,var,e1,e2) ::= "<declaration(type,var,[powerTypeCast.(type),\"Math.pow(\", e1, \", \", e2, \")\"])>"

//Conditional IF-ELSE
conditional(stat,var,stat_true,stat_false) ::= <<
<stats(stat)>
if (<var>) {
   <stat_true>
}<if(stat_false)>
else {
   <stat_false>
}<endif>
>>